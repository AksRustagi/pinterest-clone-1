{"version":3,"sources":["components/FireBase/Base.js","util/url.js","components/SignUp/SignUp.js","components/Search/SearchBar.js","components/Results/Imgs/Images.js","components/Results/Imgs/NoImages.js","components/Results/Results.js","components/LandingPage/Landing.js","components/Logout/Logout.js","app/App.js","constants/Routes.js","serviceWorker.js","index.js","assets/pinterest.svg","assets/github-icon.svg"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","githubProvider","auth","GithubAuthProvider","url","unsplashUrl","concat","SignUp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","authWithGithub","bind","assertThisInitialized","authWithEmailPassword","state","redirect","e","_this2","preventDefault","email","emailInput","value","password","passwordInput","fetchProvidersForEmail","then","providers","length","createUserWithEmailAndPassword","indexOf","signInWithEmailAndPassword","loginForm","reset","toaster","show","intent","Intent","WARNING","message","user","setCurrentUser","setState","catch","error","DANGER","_this3","signInWithPopup","_this4","react_default","a","createElement","Redirect","to","style","objectSpread","flex","display","Open","className","onClick","handleClose","modalLayer","formModal","ref","element","form","src","PinLogo","alt","name","type","input","placeholder","onSubmit","Github","Component","position","top","left","justifyContent","alignItems","width","height","zIndex","overflow","backgroundColor","color","boxShadow","maxWidth","maxHeight","borderRadius","flexDirection","SearchBar","searchInput","isOpen","onSearchChange","target","handleSubmit","onSearch","query","currentTarget","closeModal","showModal","SignUp_SignUp","htmlFor","onChange","id","Link","aria-label","Img","userPhoto","href","rel","NoImages","Results","_ref","imgs","data","map","img","Images","urls","small","links","html","profile_image","link","key","Imgs_NoImages","Landing","performSearch","axios","get","images","results","loading","err","console","log","keyUp","keyCode","searchQuery","fetch","resp","json","prevState","SearchBar_SearchBar","components_Results_Results","document","addEventListener","scrollTop","window","pageYOffset","windowHeight","innerHeight","scrollPercentage","body","scrollHeight","Logout","signOut","App","authenticated","currentUser","removeAuthListener","onAuthStateChanged","HashRouter","Switch","Route","path","exact","component","render","Boolean","location","hostname","match","ReactDOM","src_app_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.6b2ac29a.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID\n});\n\nconst githubProvider = new firebase.auth.GithubAuthProvider()\n\nexport { app, githubProvider }","const url = {\n    unsplashUrl:(`https://api.unsplash.com/photos/?page=1&per_page=100&client_id=${process.env.REACT_APP_UNSPLASH_ACCESS}`),\n    \n}\n\nexport default url;","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport PinLogo from '../../assets/pinterest.svg';\nimport Github from '../../assets/github-icon.svg';\nimport { app, githubProvider } from '../FireBase/Base.js';\nimport { Toaster, Intent } from '@blueprintjs/core';\nimport './signup.scss'\n\n\nexport default class SignUp extends Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.authWithGithub = this.authWithGithub.bind(this);\n    this.authWithEmailPassword = this.authWithEmailPassword.bind(this);\n\n    this.state = {\n      redirect: false,\n    }\n  }\n\n  authWithEmailPassword(e) {\n    e.preventDefault();\n \n    const email = this.emailInput.value\n    const password = this.passwordInput.value\n\n    app.auth().fetchProvidersForEmail(email)\n    .then((providers) => {\n      if (providers.length === 0) {\n        // create user\n        return app.auth().createUserWithEmailAndPassword(email, password)\n      } else if (providers.indexOf(\"password\") === -1) {\n        // they used github\n        this.loginForm.reset()\n        this.toaster.show({ intent: Intent.WARNING, message: \"Try alternative login :(\" })\n      } else {\n        // sign user in\n        return app.auth().signInWithEmailAndPassword(email, password)\n      }\n    })\n    .then((user) => {\n      if (user && user.email) {\n        this.loginForm.reset()\n        // so that its not pre populated\n        this.props.setCurrentUser(user)\n        this.setState({ redirect: true })\n      }\n    })\n    .catch((error) => {\n      this.toaster.show({ intent: Intent.DANGER, message: error.message })\n    })\n    // handles all errors\n  } \n  \n\n  authWithGithub() {\n    // will cause the browser to open a new tab to signin with github\n    app.auth().signInWithPopup(githubProvider) \n      .then((user, error) => {\n        if(error) {\n          this.toaster.show({ intent: Intent.DANGER, message: 'Unable to sign in with GitHub'})\n        } else {\n          this.props.setCurrentUser(user)\n          this.setState({ redirect: true })\n        }\n      })\n  }\n\n  render() {\n    if(this.state.redirect === true) {\n      return <Redirect to='/' />\n    }\n    return (\n      <div style={{ ...flex, display: this.props.Open ? 'flex' : 'none' }}>\n        <div className='modal-layer' onClick={this.props.handleClose} style={modalLayer}></div>\n        <div className=\"form-container\" style={formModal}>\n        <Toaster ref={(element) => { this.toaster= element }} />\n          <form ref={(form) => { this.loginForm = form }}>\n            <img src={PinLogo} alt='pinterest logo' />\n            <h1>Sign up to see more</h1>\n            <h4>Access Pinterest's best ideas with a free account</h4>\n            {/* usually the label would wrap the input but in order to hide the label like pinterest it's not */}\n            <label className='visibility-hidden'>\n              Email\n            </label>\n            <input\n              name=\"email\"\n              type=\"email\"\n              /* this lets us grab the email input directly to get the value \n              so we can use when calling things inside of our functions\n              */\n              ref={(input) => { this.emailInput = input }}\n              placeholder='Email'\n            />\n            <label className='visibility-hidden'>\n              Password\n            </label>\n            <input\n              name=\"password\"\n              type=\"password\"\n              ref={(input) => { this.passwordInput = input }}\n              placeholder='Create a password'\n            />\n            <label className='visibility-hidden'>\n              Age\n            </label>\n            <input\n              name='name'\n              type='number'\n              placeholder='Age'\n            />\n            <button className='signup-btn' type=\"submit\" onSubmit={(e) => { this.authWithEmailPassword(e) }} ref={(form) => { this.loginForm = form }}>Continue</button>\n            <p>or</p>\n            <button className='github-btn' onClick={() => { this.authWithGithub() }}>\n              <img src={Github} alt='github icon' />\n              Log in with GitHub\n            </button>\n            {/* <button className='login-btn'>Log in</button> */}\n          </form>\n        </div>\n      </div>\n    );\n  };\n}\n\n\nconst flex = {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100vw',\n  height: '100vh',\n  zIndex: 20,\n  overflow: 'hidden',\n  backgroundColor: 'rgba(57,57,57,0.6)',\n};\n\nconst modalLayer = {\n  position: 'fixed',\n  width: '100vw',\n  height: '100vh',\n  zIndex: 20,\n  backgroundColor: 'transparent'\n};\n\nconst formModal = {\n  position: 'absolute',\n  color: 'rgb(57,57,57)',\n  boxShadow: 'rgba(0, 0, 0, 0.45) 0px 2px 10px',\n  backgroundColor: '#FFFFFF',\n  width: '420px',\n  height: '578px',\n  maxWidth: '100%',\n  maxHeight: '100%',\n  zIndex: 20,\n  borderRadius: '8px',\n  overflow: 'auto',\n  display: 'flex',\n  flexDirection: 'column'\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport SignUp from '../SignUp/SignUp.js';\n\nimport PinLogo from '../../assets/pinterest.svg';\nimport './search.scss';\n\nexport default class SearchBar extends Component {\n    state = {\n        searchInput: '',\n        isOpen: false,\n    };\n\n    onSearchChange = e => {\n      this.setState({ searchInput: e.target.value })\n    };\n\n    handleSubmit = e => {\n     e.preventDefault();\n     this.props.onSearch(this.query.value);\n     e.currentTarget.reset();\n    };\n\n    closeModal = () => {\n      this.setState({ isOpen: false })\n    };\n\n    showModal = () => {\n      this.setState({ isOpen: true })\n    };\n\n    render() {\n        return (\n            <div className='header-container'>\n                <SignUp handleClose={this.closeModal} Open={this.state.isOpen} />\n                <img src={PinLogo} alt='pinterest logo' />\n                <form className='search-container' onSubmit={this.handleSubmit}>\n                    <label className='visibility-hidden' htmlFor='search'>Search</label>\n                    <input\n                        type='search'\n                        onChange={this.onSearchChange}\n                        ref={input => (this.query = input)}\n                        name='search'\n                        placeholder='Search'\n                    />\n                    <button type='submit' id='submit' className='search-btn'>\n                        Search\n                    </button>\n                </form>\n                <div className='controlls'>\n                    <button className='login-btn' onClick={this.showModal}>Log In</button>              \n                    <Link to='/logout' aria-label='Log Out'>\n                        <button className='logout-btn'>Log Out</button> \n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport './images.scss';\n\nconst Img = props => (\n  <li className=\"img-wrap\">\n    <img src={props.url} alt=\"\" />\n    <div className=\"img-wrap__footer\">\n      <img src={props.userPhoto} alt=\"\" className=\"img-profile\" />\n      <a href={props.user} target=\"_blank\" rel=\"noopener noreferrer\">Photo by {props.name}</a>\n    </div>\n  </li>\n);\n\nexport default Img;\n","import React from 'react';\n\nconst NoImages = () => (\n    <h2>Sorry! No Images match your search.</h2>\n);\n\nexport default NoImages;","import React from 'react';\nimport Images from './Imgs/Images.js';\nimport NoImages from './Imgs/NoImages.js';\nimport './results.scss';\n\nconst Results = ({ data }) => {\n\n    let imgs;\n    if (data.length > 0) {\n        imgs = data.map(img => \n        <Images \n            url={img.urls.small}\n            user={img.user.links.html}\n            name={img.user.name}\n            userPhoto={img.user.profile_image.small}\n            link={img.links.html}\n            key={img.id}\n        />\n        );\n    } else {\n        imgs = <NoImages />;\n    }\n\treturn (\n\t\t<ul className=\"img-list\">\n\t\t\t{imgs}\n\t\t</ul>\n\t);\n};\n\nexport default Results;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport url from '../../util/url.js'\nimport SearchBar from '../Search/SearchBar.js';\nimport Results from '../Results/Results.js';\nimport './landing.scss';\n\nexport default class Landing extends Component {\n\n  constructor(props) {\n    super(props)\n    this.keyUp = this.keyUp.bind(this);\n\n\n\n    this.state = {\n      images: [],\n      loading: true,\n      searchQuery: null,\n    }\n  }\n\n  // fetch on load\n  componentDidMount() {\n    fetch(url.unsplashUrl)\n      .then(resp => resp.json())\n      .then(data => {\n        this.setState({\n          images: data,\n          loading: false\n        })\n      })\n      .catch(error => console.log('Error during fetch!', error))\n  }\n  \n  // input search\n  performSearch = (query) => {\n\t\taxios\n\t\t\t.get(`https://api.unsplash.com/search/photos/?page=1&per_page=100&query=${query}&client_id=${process.env.REACT_APP_UNSPLASH_ACCESS}`)\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({ \n          images: data.data.results, \n          // searchQuery: true,\n          loading: false,\n        });\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log('Error during fetching!', err);\n\t\t\t});\n\t};\n\n  componentDidUpdate(prevState) {\n    if (this.state.data !== prevState.data) {\n      this.performSearch();\n    }\n  }\n\n\n  // listener for enter key\n  keyUp = (e) => {\n    if (e.keyCode === 13) {\n      this.performSearch();\n    }\n  };\n\n  render() {\n\n    return (\n\n      <div className='landing-container' keyUp={(e) => this.keyUp(e)}>\n        <SearchBar onSearch={this.performSearch}/>\n        {this.state.loading\n        ? <h3>Loading...</h3>\n        : <Results data={this.state.images} />\n        }\n      </div>\n    )\n  }\n}\n\ndocument.addEventListener('scroll', function () {\n  let scrollTop = window.pageYOffset;\n  let windowHeight = window.innerHeight\n  let bodyHeight = document.body.scrollHeight - windowHeight;\n  let scrollPercentage = (scrollTop / bodyHeight);\n\n  // if the scroll is more than 90% from the top, load more content.\n  if (!this.loading && scrollPercentage > 0.9) {\n    this.loading = true;\n    // page++;\n  }\n});\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { app } from '../FireBase/Base.js';\n\nclass Logout extends Component {\n  constructor() {\n    super()\n    this.state = {\n      redirect: false\n    }\n  }\n\n  componentWillMount() {\n    app.auth().signOut().then((user) => {\n      this.setState({ redirect: true })\n    })\n  }\n\n  render() {\n    if (this.state.redirect === true) {\n      return <Redirect to='/' />\n    }\n\n    return (\n      <div>\n        <h3>Logging Out</h3>\n      </div>\n    )\n  }\n}\n\nexport default Logout","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { app } from '../components/FireBase/Base.js';\nimport * as ROUTES from '../constants/Routes';\nimport Landing from '../components/LandingPage/Landing.js';\nimport SignUp from '../components/SignUp/SignUp.js';\nimport Logout from '../components/Logout/Logout.js';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.setCurrentUser = this.setCurrentUser.bind(this);\n\n\n    this.state = {\n      authenticated: false,\n      currentUser: null,\n      loading: true,\n    }\n  }\n\n  setCurrentUser(user) {\n    if (user) {\n      this.setState({\n        currentUser: user,\n        authenticated: true\n      })\n    } else {\n      this.setState({\n        currentUser: null,\n        authenticated: false\n      })\n    }\n  }\n\n  componentWillMount() {\n    this.removeAuthListener = app.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          authenticated: true,\n          currentUser: user,\n          loading: false,\n        })\n      } else {\n        this.setState({\n          authenticated: false,\n          currentUser: null,\n          loading: false,\n        })\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    this.removeAuthListener();\n  }\n\n  render() {\n    if (this.state.loading === true) {\n      return (\n        <div className='loader'>\n          <h3>Loading...</h3>\n        </div>\n      )\n    }\n    return (\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route path={ROUTES.LANDING} exact component={Landing} />\n            <Route path={ROUTES.SIGN_UP} exact component={SignUp} />\n            <Route path={ROUTES.LOG_OUT} exact component={Logout} />\n            <Route path={'/'} render={() => <Redirect to={ROUTES.LANDING} />} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","export const LANDING = '/home';\nexport const SIGN_UP = '/signup';\nexport const LOG_IN = '/login';\nexport const LOG_OUT = '/logout';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pinterest.6003b4e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-icon.a79d8bfd.svg\";"],"sourceRoot":""}